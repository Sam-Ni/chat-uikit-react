import{__assign as t}from"tslib";import{jsx as o}from"react/jsx-runtime";import{useState as e,useEffect as i}from"react";import{useTUIKitContext as n}from"../../context/TUIKitContext.js";import"../../context/TUIMessageContext.js";import{ConversationPreviewContent as r}from"./ConversationPreviewContent.js";import{getDisplayImage as a,getDisplayTitle as s,getDisplayMessage as v,getDisplayTime as m}from"./utils.js";function c(c){var l=c.activeConversation,u=c.conversation,p=c.Preview,d=void 0===p?r:p,C=c.searchValue,f=c.conversationUpdateCount,x=n("ConversationPreview"),j=x.setActiveConversation,y=x.myProfile,I=e(a(u)),P=I[0],T=I[1],g=e(s(u,C)),w=g[0],U=g[1],A=e(v(u,y)),D=A[0],M=A[1],b=e(m(u)),h=b[0],K=b[1],V=e(u.unreadCount),k=V[0],q=V[1],z=(null==l?void 0:l.conversationID)===(null==u?void 0:u.conversationID);return d?(i((function(){U(s(u,C)),M(v(u,y)),T(a(u)),K(m(u)),q(u.unreadCount)}),[u,C,f]),o(d,t({},c,{active:z,displayImage:P,displayTitle:w,displayMessage:D,displayTime:h,unread:k,setActiveConversation:j}))):null}export{c as ConversationPreview};
